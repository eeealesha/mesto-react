{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexeygavrilov/Desktop/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { api } from \"../utils/api\";\nimport { Card } from \"./Card\";\nlet userID;\nexport default function Main(props) {\n  _s();\n\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Promise.all([//в Promise.all передаем массив промисов которые нужно выполнить\n    api.getUserInfo(), api.getInitialCards()]).then(values => {\n      //попадаем сюда когда оба промиса будут выполнены\n      const [userData, initialCards] = values;\n      userID = userData._id;\n      setUserName(userData.name);\n      setUserDescription(userData.about);\n      setUserAvatar(userData.avatar);\n      setCards([...cards, initialCards]); // у нас есть все нужные данные, отрисовываем страницу\n    }).catch(err => {\n      //попадаем сюда если один из промисов завершаться ошибкой\n      console.log(err);\n    });\n  }, [cards]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile__picture\",\n            src: userAvatar,\n            alt: \"\\u0424\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044F \\u0416\\u0430\\u043A\\u0430-\\u0418\\u0432 \\u041A\\u0443\\u0441\\u0442\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button botton_type_avatar\",\n            type: \"button\",\n            onClick: props.onEditAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__title\",\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button button_type_edit\",\n              type: \"button\",\n              onClick: props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__subtitle\",\n            children: userDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button_type_add\",\n        type: \"button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"photo-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"photo-grid__list\",\n        children: [\"cards.map((card, i) => (\", /*#__PURE__*/_jsxDEV(Card, {\n          onClick: props.onCardClick,\n          cardsList: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }, this), \"))\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"CvoWnINbj4Vl8fSyetGIFG8y3YQ=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/alexeygavrilov/Desktop/dev/mesto-react/src/components/Main.js"],"names":["React","api","Card","userID","Main","props","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","then","values","userData","initialCards","_id","name","about","avatar","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","onCardClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {api} from \"../utils/api\";\nimport {Card} from \"./Card\";\n\nlet userID;\nexport default function Main(props) {\n\n    const [userName, setUserName] = React.useState('');\n    const [userDescription, setUserDescription] = React.useState('');\n    const [userAvatar, setUserAvatar] = React.useState('');\n    const [cards, setCards] = React.useState([])\n\n    React.useEffect(() => {\n        Promise.all([\n            //в Promise.all передаем массив промисов которые нужно выполнить\n            api.getUserInfo(),\n            api.getInitialCards()\n        ])\n            .then((values) => {\n                //попадаем сюда когда оба промиса будут выполнены\n                const [userData, initialCards] = values;\n                userID = userData._id;\n                setUserName(userData.name);\n                setUserDescription(userData.about);\n                setUserAvatar(userData.avatar);\n                setCards([...cards, initialCards]);\n                // у нас есть все нужные данные, отрисовываем страницу\n            })\n            .catch((err) => {\n                //попадаем сюда если один из промисов завершаться ошибкой\n                console.log(err);\n            });\n    }, [cards])\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__description\">\n                    <div className=\"profile__avatar\">\n                        <img\n                            className=\"profile__picture\"\n                            src={userAvatar}\n                            alt=\"Фотография Жака-Ив Кусто\"\n                        />\n                        <button className=\"button botton_type_avatar\" type=\"button\"\n                                onClick={props.onEditAvatar}></button>\n                    </div>\n                    <div className=\"profile__text\">\n                        <div className=\"profile__wrapper\">\n                            <h1 className=\"profile__title\">{userName}</h1>\n                            <button className=\"button button_type_edit\" type=\"button\"\n                                    onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__subtitle\">{userDescription}</p>\n                    </div>\n                </div>\n                <button className=\"button button_type_add\" type=\"button\" onClick={props.onAddPlace}></button>\n            </section>\n            <section className=\"photo-grid\">\n                <ul className=\"photo-grid__list\">\n                    cards.map((card, i) => (<Card onClick={props.onCardClick} cardsList={cards}/>))\n                </ul>\n            </section>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}