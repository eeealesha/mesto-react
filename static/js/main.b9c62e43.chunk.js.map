{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_response","userName","userAbout","method","body","JSON","stringify","name","about","userAvatar","avatar","cardName","cardLink","link","cardId","authorization","Card","props","type","src","card","alt","onClick","likes","length","Main","React","useState","setUserName","userDescription","setUserDescription","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","values","userData","initialCards","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","i","onCardClick","Footer","PopupWithForm","isOpen","noValidate","onClose","title","children","buttonText","ImagePopup","owner","createdAt","like","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","required","minLength","maxLength","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9c62e43.chunk.js","sourcesContent":["export default function Header() {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n        </header>\n    )\n}","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _response(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  sendUserInfo(userName, userAbout) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: userName,\n        about: userAbout,\n      }),\n    }).then(this._response);\n  }\n\n  sendUserAvatar(userAvatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: userAvatar,\n      }),\n    }).then(this._response);\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  postNewCard(cardName, cardLink) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink,\n      }),\n    }).then(this._response);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n}\n\n// Создаем экземпляр класса АПИ с нашими настройками\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-16\",\n  headers: {\n    authorization: \"2cbbf139-db5f-40de-8d4c-6c77fbe4b91c\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n","export function Card(props) {\n    return (\n        <li className=\"card__element\">\n            <div className=\"card\">\n                <button className=\"button button_type_delete\" type=\"button\"></button>\n                <img\n                    className=\"photo-grid__item\"\n                    src={props.card.link}\n                    alt=\"Картинка, которая иллюстрирует название\"\n                    onClick={() => props.onClick(props.card)}\n                />\n                <div className=\"photo-grid__caption\">\n                    <h2 className=\"photo-grid__title\">{props.card.name}</h2>\n                    <div className=\"photo-grid__wrapper\">\n                        <button className=\"button button_type_like\" type=\"button\"></button>\n                        <span className=\"photo-grid__like-counter\">{props.card.likes.length}</span>\n                    </div>\n                </div>\n            </div>\n        </li>\n    )\n}","import React from 'react';\nimport {api} from \"../utils/api\";\nimport {Card} from \"./Card\";\n\nexport default function Main(props) {\n    // Создаем стейт-переменные для профиля\n    const [userName, setUserName] = React.useState('');\n    const [userDescription, setUserDescription] = React.useState('');\n    const [userAvatar, setUserAvatar] = React.useState('');\n    // Создаем стейт-переменные для массива карточек\n    const [cards, setCards] = React.useState([])\n\n    React.useEffect(() => {\n        Promise.all([\n            //в Promise.all передаем массив промисов которые нужно выполнить\n            api.getUserInfo(),\n            api.getInitialCards()\n        ])\n            .then((values) => {\n                //попадаем сюда когда оба промиса будут выполнены\n                const [userData, initialCards] = values;\n                setUserName(userData.name);\n                setUserDescription(userData.about);\n                setUserAvatar(userData.avatar);\n                setCards(initialCards);\n                // у нас есть все нужные данные, отрисовываем страницу\n            })\n            .catch((err) => {\n                //попадаем сюда если один из промисов завершаться ошибкой\n                console.log(err);\n            });\n    }, [])\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__description\">\n                    <div className=\"profile__avatar\">\n                        <img\n                            className=\"profile__picture\"\n                            src={userAvatar}\n                            alt=\"Фотография Жака-Ив Кусто\"\n                        />\n                        <button className=\"button botton_type_avatar\" type=\"button\"\n                                onClick={props.onEditAvatar}></button>\n                    </div>\n                    <div className=\"profile__text\">\n                        <div className=\"profile__wrapper\">\n                            <h1 className=\"profile__title\">{userName}</h1>\n                            <button className=\"button button_type_edit\" type=\"button\"\n                                    onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__subtitle\">{userDescription}</p>\n                    </div>\n                </div>\n                <button className=\"button button_type_add\" type=\"button\" onClick={props.onAddPlace}></button>\n            </section>\n            <section className=\"photo-grid\">\n                <ul className=\"photo-grid__list\">\n                    {cards.map((card, i) => <Card card={card} key={i} onClick={props.onCardClick}/>)}\n                </ul>\n            </section>\n        </main>\n    )\n}","export default function Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__author\">© 2020 Mesto Russia</p>\n        </footer>\n    )\n}\n\n","import React from \"react\";\n\nexport function PopupWithForm(props) {\n    return (\n        <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n            <form className=\"popup__container\" name={`${props.name}`} noValidate>\n                <button className=\"button button_type_close\" type=\"button\" onClick={props.onClose}></button>\n                <h2 className=\"popup__title\">{props.title}</h2>\n                <fieldset className=\"form\">\n                {props.children}\n                <button className=\"button button_type_submit\">{props.buttonText}</button>\n                </fieldset>\n            </form>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function ImagePopup(props) {\n    return (\n        <div className={`popup popup_type_fig ${props.isOpen ? 'popup_opened' : ''}`}>\n            <figure className=\"popup__figure\">\n                <button className=\"button button_type_close\" type=\"button\" onClick={props.onClose}></button>\n                <img\n                    className=\"popup__img\"\n                    src={props.card ? props.card.link : ''}\n                    alt={props.card ? `Картинка с изображением ${props.card.name}` : ''}\n                />\n                <figcaption\n                    className=\"popup__figcaption popup__figcaption-text\">{props.card ? props.card.name : ''}</figcaption>\n                <figcaption\n                    className=\"popup__figcaption popup__figcaption-owner\">{props.card ? props.card.owner.name : ''}</figcaption>\n                <figcaption\n                    className=\"popup__figcaption popup__figcaption-date\">{props.card ? props.card.createdAt : ''}</figcaption>\n                <figcaption className=\"popup__figcaption popup__figcaption-who\">Кому нравится?</figcaption>\n                <figcaption\n                    className=\"popup__figcaption popup__figcaption-likes\">{props.card ? props.card.likes.map((like, i) =>\n                    <div key={i}>{like.name}</div>) : \"\"}</figcaption>\n            </figure>\n        </div>\n    );\n}","import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport {PopupWithForm} from \"./PopupWithForm\";\nimport {ImagePopup} from \"./ImagePopup\";\nimport React from 'react';\n\n\nfunction App() {\n    // Создаем стейт-переменные попапов\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false); // true или false\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false); // true или false\n    const [isEditAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false); // true или false\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false); // true или false\n    // Создаем стейт-переменную выбранной карточки\n    const [selectedCard, setSelectedCard] = React.useState(null);\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setImagePopupOpen(true)\n    }\n\n    function handleEditAvatar() {\n        setAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setSelectedCard(null);\n        setImagePopupOpen(false)\n    }\n\n    return (\n        <div>\n            <div className=\"page\">\n                <Header/>\n                <Main onEditAvatar={handleEditAvatar} onAddPlace={handleAddPlaceClick}\n                      onEditProfile={handleEditProfileClick} onCardClick={handleCardClick}/>\n                <Footer/>\n                <PopupWithForm onClose={closeAllPopups} isOpen={isEditProfilePopupOpen} title='Редактировать профиль'\n                               name='profile' buttonText='Сохранить' children={\n\n                    <>\n                        <label className=\"form__field\">\n                            <input\n                                type=\"text\"\n                                className=\"form__item form__item_el_name\"\n                                id=\"name\"\n                                name=\"name\"\n                                required\n                                minLength=\"2\"\n                                maxLength=\"40\"\n                            />\n                            <div className=\"form__error-text\" id=\"name-error\"></div>\n                        </label>\n                        <label className=\"form__field\">\n                            <input\n                                type=\"text\"\n                                className=\"form__item form__item_el_job\"\n                                id=\"job\"\n                                name=\"job\"\n                                required\n                                minLength=\"2\"\n                                maxLength=\"200\"\n                            />\n                            <div className=\"form__error-text\" id=\"job-error\"></div>\n                        </label>\n                    </>}/>\n                <PopupWithForm onClose={closeAllPopups} isOpen={isAddPlacePopupOpen} title='Новое место' name='add'\n                               buttonText='Создать' children={\n                    <>\n\n                        <label className=\"form__field\">\n                            <input\n                                type=\"text\"\n                                className=\"form__item form__item_el_place\"\n                                id=\"place\"\n                                name=\"place\"\n                                placeholder=\"Название\"\n                                required\n                                minLength=\"1\"\n                                maxLength=\"30\"\n                            />\n                            <div className=\"form__error-text\" id=\"place-error\"></div>\n                        </label>\n                        <label className=\"form__field\">\n                            <input\n                                type=\"url\"\n                                className=\"form__item form__item_el_img\"\n                                id=\"img\"\n                                name=\"img\"\n                                placeholder=\"Ссылка на картинку\"\n                                required\n                            />\n                            <div className=\"form__error-text\" id=\"img-error\"></div>\n                        </label>\n\n                    </>}/>\n                <PopupWithForm onClose={closeAllPopups} isOpen={isEditAvatarPopupOpen} title='Обновить аватар'\n                               name='avatar' buttonText='Сохранить' children={<>\n                    <label className=\"form__field\">\n                        <input\n                            type=\"url\"\n                            className=\"form__item form__item_el_link\"\n                            id=\"link\"\n                            name=\"link\"\n                            placeholder=\"https://somewebsite.com/someimage.jpg\"\n                            required\n                        />\n                        <div className=\"form__error-text\" id=\"link-error\"></div>\n                    </label>\n                </>}/>\n                <PopupWithForm onClose={closeAllPopups} title='Вы уверены?' name='confirm' buttonText='Да'/>\n                <ImagePopup onClose={closeAllPopups} isOpen={isImagePopupOpen} card={selectedCard}/>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './pages/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}